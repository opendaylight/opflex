{
  "comments": [
    {
      "key": {
        "uuid": "1b91ebb7_31d00796",
        "filename": "agent-ovs/lib/Agent.cpp",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 7943
      },
      "writtenOn": "2019-11-25T05:41:50Z",
      "side": 1,
      "message": "Compiler warning here\n\n12:00:56 In file included from lib/Agent.cpp:24:0:\n12:00:56 ./lib/include/opflexagent/Agent.h: In constructor \u0027opflexagent::Agent::Agent(opflex::ofcore::OFFramework\u0026)\u0027:\n12:00:56 ./lib/include/opflexagent/Agent.h:357:20: warning: \u0027opflexagent::Agent::netflowManager\u0027 will be initialized after [-Wreorder]\n12:00:56      NetFlowManager netflowManager;\n12:00:56                     ^\n12:00:56 ./lib/include/opflexagent/Agent.h:356:17: warning:   \u0027opflexagent::SpanManager opflexagent::Agent::spanManager\u0027 [-Wreorder]\n12:00:56      SpanManager spanManager;\n12:00:56                  ^\n12:00:56 lib/Agent.cpp:61:1: warning:   when initialized here [-Wreorder]\n12:00:56  Agent::Agent(OFFramework\u0026 framework_)\n12:00:56  ^",
      "revId": "a6bf6fe9a0582cb44d1e0798c56ca5548e4869fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90031c53_4f6b9083",
        "filename": "agent-ovs/lib/include/opflexagent/NetFlowListener.h",
        "patchSetId": 6
      },
      "lineNbr": 34,
      "author": {
        "id": 7943
      },
      "writtenOn": "2019-11-25T05:41:50Z",
      "side": 1,
      "message": "No param named exporterconfigSt exists",
      "revId": "a6bf6fe9a0582cb44d1e0798c56ca5548e4869fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70eee528_1d705b26",
        "filename": "agent-ovs/ovs/NetFlowJsonRpc.cpp",
        "patchSetId": 6
      },
      "lineNbr": 109,
      "author": {
        "id": 8288
      },
      "writtenOn": "2019-11-28T04:40:00Z",
      "side": 1,
      "message": "Only methods that need to be implemented are netflow specific. Rest of the code can be reused fro JsonRpc.",
      "revId": "a6bf6fe9a0582cb44d1e0798c56ca5548e4869fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc3f634d_d2e4515a",
        "filename": "agent-ovs/ovs/NetFlowRenderer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 8288
      },
      "writtenOn": "2019-11-28T04:40:00Z",
      "side": 1,
      "message": "Some of the code in this file is a copy of SpanRenderer.cpp. The connectmethod has chnaged to use config from the opflex config file. IP address and port come from there.\nYou can add netlfow JSON/RPC methods to JsonRpc.cpp and instantiate it here. This way code does not have to be duplicated. Use an instance of JsonRpc instead of NetFlowJsonRpc. NetFlowJsonRpc should not be required.",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 74,
        "endChar": 10
      },
      "revId": "a6bf6fe9a0582cb44d1e0798c56ca5548e4869fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ea9e624_f594ee29",
        "filename": "agent-ovs/ovs/include/NetFlowJsonRpc.h",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 7943
      },
      "writtenOn": "2019-11-25T05:41:50Z",
      "side": 1,
      "message": "uuid -\u003e brUuid",
      "revId": "a6bf6fe9a0582cb44d1e0798c56ca5548e4869fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "458f4023_29f9e619",
        "filename": "agent-ovs/ovs/include/NetFlowJsonRpc.h",
        "patchSetId": 6
      },
      "lineNbr": 75,
      "author": {
        "id": 7943
      },
      "writtenOn": "2019-11-25T05:41:50Z",
      "side": 1,
      "message": "doxygen comments are missing some params",
      "revId": "a6bf6fe9a0582cb44d1e0798c56ca5548e4869fa",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    }
  ]
}