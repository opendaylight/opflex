package org.opendaylight.opflex.genie.content.format.build.automake.cpp;

import org.opendaylight.opflex.genie.engine.file.WriteStats;
import org.opendaylight.opflex.genie.engine.format.*;

/**
 * Created by midvorki on 10/10/14.
 */
public class FAxBoostBaseM4
        extends GenericFormatterTask
{
    public FAxBoostBaseM4(
            FormatterCtx aInFormatterCtx,
            FileNameRule aInFileNameRule,
            Indenter aInIndenter,
            BlockFormatDirective aInHeaderFormatDirective,
            BlockFormatDirective aInCommentFormatDirective,
            boolean aInIsUserFile,
            WriteStats aInStats)
    {
        super(aInFormatterCtx,
              aInFileNameRule,
              aInIndenter,
              aInHeaderFormatDirective,
              aInCommentFormatDirective,
              aInIsUserFile,
              aInStats);
    }

    public void generate()
    {
        out.println(FORMAT);
    }

    public static final String FORMAT = "# ===========================================================================\n"
                                        + "#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n"
                                        + "# ===========================================================================\n"
                                        + "#\n" + "# SYNOPSIS\n" + "#\n"
                                        + "#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n"
                                        + "#\n" + "# DESCRIPTION\n" + "#\n"
                                        + "#   Test for the Boost C++ libraries of a particular version (or newer)\n"
                                        + "#\n"
                                        + "#   If no path to the installed boost library is given the macro searchs\n"
                                        + "#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n"
                                        + "#   $BOOST_ROOT environment variable. Further documentation is available at\n"
                                        + "#   <http://randspringer.de/boost/index.html>.\n" + "#\n"
                                        + "#   This macro calls:\n" + "#\n"
                                        + "#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n" + "#\n"
                                        + "#   And sets:\n" + "#\n" + "#     HAVE_BOOST\n" + "#\n" + "# LICENSE\n"
                                        + "#\n" + "#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n"
                                        + "#   Copyright (c) 2009 Peter Adolphs\n" + "#\n"
                                        + "#   Copying and distribution of this file, with or without modification, are\n"
                                        + "#   permitted in any medium without royalty provided the copyright notice\n"
                                        + "#   and this notice are preserved. This file is offered as-is, without any\n"
                                        + "#   warranty.\n" + "\n" + "#serial 23\n" + "\n"
                                        + "AC_DEFUN([AX_BOOST_BASE],\n" + "[\n" + "AC_ARG_WITH([boost],\n"
                                        + "  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n"
                                        + "    [use Boost library from a standard location (ARG=yes),\n"
                                        + "     from the specified location (ARG=<path>),\n"
                                        + "     or disable it (ARG=no)\n" + "     @<:@ARG=yes@:>@ ])],\n" + "    [\n"
                                        + "    if test \"$withval\" = \"no\"; then\n" + "        want_boost=\"no\"\n"
                                        + "    elif test \"$withval\" = \"yes\"; then\n"
                                        + "        want_boost=\"yes\"\n" + "        ac_boost_path=\"\"\n" + "    else\n"
                                        + "        want_boost=\"yes\"\n" + "        ac_boost_path=\"$withval\"\n"
                                        + "    fi\n" + "    ],\n" + "    [want_boost=\"yes\"])\n" + "\n" + "\n"
                                        + "AC_ARG_WITH([boost-libdir],\n"
                                        + "        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n"
                                        + "        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n"
                                        + "        [\n" + "        if test -d \"$withval\"\n" + "        then\n"
                                        + "                ac_boost_lib_path=\"$withval\"\n" + "        else\n"
                                        + "                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n"
                                        + "        fi\n" + "        ],\n" + "        [ac_boost_lib_path=\"\"]\n" + ")\n"
                                        + "\n" + "if test \"x$want_boost\" = \"xyes\"; then\n"
                                        + "    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n"
                                        + "    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n"
                                        + "    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n"
                                        + "    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n"
                                        + "    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n"
                                        + "    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n"
                                        + "        boost_lib_version_req_sub_minor=\"0\"\n" + "        fi\n"
                                        + "    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n"
                                        + "    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n"
                                        + "    succeeded=no\n" + "\n"
                                        + "    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n"
                                        + "    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n"
                                        + "    dnl this (as it rises problems for generic multi-arch support).\n"
                                        + "    dnl The last entry in the list is chosen by default when no libraries\n"
                                        + "    dnl are found, e.g. when only header-only libraries are installed!\n"
                                        + "    libsubdirs=\"lib\"\n" + "    ax_arch=`uname -m`\n"
                                        + "    case $ax_arch in\n" + "      x86_64|ppc64|s390x|sparc64|aarch64)\n"
                                        + "        libsubdirs=\"lib64 lib lib64\"\n" + "        ;;\n" + "    esac\n"
                                        + "\n"
                                        + "    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n"
                                        + "    dnl them priority over the other paths since, if libs are found there, they\n"
                                        + "    dnl are almost assuredly the ones desired.\n"
                                        + "    AC_REQUIRE([AC_CANONICAL_HOST])\n"
                                        + "    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n" + "\n"
                                        + "    case ${host_cpu} in\n" + "      i?86)\n"
                                        + "        libsubdirs=\"lib/i386-${host_os} $libsubdirs\"\n" + "        ;;\n"
                                        + "    esac\n" + "\n"
                                        + "    dnl first we check the system location for boost libraries\n"
                                        + "    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n"
                                        + "    dnl or if you install boost with RPM\n"
                                        + "    if test \"$ac_boost_path\" != \"\"; then\n"
                                        + "        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n"
                                        + "        for ac_boost_path_tmp in $libsubdirs; do\n"
                                        + "                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n"
                                        + "                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n"
                                        + "                        break\n" + "                fi\n" + "        done\n"
                                        + "    elif test \"$cross_compiling\" != yes; then\n"
                                        + "        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n"
                                        + "            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n"
                                        + "                for libsubdir in $libsubdirs ; do\n"
                                        + "                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n"
                                        + "                done\n"
                                        + "                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n"
                                        + "                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n"
                                        + "                break;\n" + "            fi\n" + "        done\n"
                                        + "    fi\n" + "\n"
                                        + "    dnl overwrite ld flags if we have required special directory with\n"
                                        + "    dnl --with-boost-libdir parameter\n"
                                        + "    if test \"$ac_boost_lib_path\" != \"\"; then\n"
                                        + "       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n" + "    fi\n" + "\n"
                                        + "    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n"
                                        + "    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n" + "    export CPPFLAGS\n"
                                        + "\n" + "    LDFLAGS_SAVED=\"$LDFLAGS\"\n"
                                        + "    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n" + "    export LDFLAGS\n" + "\n"
                                        + "    AC_REQUIRE([AC_PROG_CXX])\n" + "    AC_LANG_PUSH(C++)\n"
                                        + "        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n"
                                        + "    @%:@include <boost/version.hpp>\n" + "    ]], [[\n"
                                        + "    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n"
                                        + "    // Everything is okay\n" + "    #else\n"
                                        + "    #  error Boost version is too old\n" + "    #endif\n" + "    ]])],[\n"
                                        + "        AC_MSG_RESULT(yes)\n" + "    succeeded=yes\n"
                                        + "    found_system=yes\n" + "        ],[\n" + "        ])\n"
                                        + "    AC_LANG_POP([C++])\n" + "\n" + "\n" + "\n"
                                        + "    dnl if we found no boost with system layout we search for boost libraries\n"
                                        + "    dnl built and installed without the --layout=system option or for a staged(not installed) version\n"
                                        + "    if test \"x$succeeded\" != \"xyes\"; then\n" + "        _version=0\n"
                                        + "        if test \"$ac_boost_path\" != \"\"; then\n"
                                        + "            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n"
                                        + "                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n"
                                        + "                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n"
                                        + "                    V_CHECK=`expr $_version_tmp \\> $_version`\n"
                                        + "                    if test \"$V_CHECK\" = \"1\" ; then\n"
                                        + "                        _version=$_version_tmp\n"
                                        + "                    fi\n"
                                        + "                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n"
                                        + "                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n"
                                        + "                done\n" + "            fi\n" + "        else\n"
                                        + "            if test \"$cross_compiling\" != yes; then\n"
                                        + "                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n"
                                        + "                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n"
                                        + "                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n"
                                        + "                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n"
                                        + "                            V_CHECK=`expr $_version_tmp \\> $_version`\n"
                                        + "                            if test \"$V_CHECK\" = \"1\" ; then\n"
                                        + "                                _version=$_version_tmp\n"
                                        + "                                best_path=$ac_boost_path\n"
                                        + "                            fi\n" + "                        done\n"
                                        + "                    fi\n" + "                done\n" + "\n"
                                        + "                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n"
                                        + "                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n"
                                        + "                if test \"$ac_boost_lib_path\" = \"\"; then\n"
                                        + "                    for libsubdir in $libsubdirs ; do\n"
                                        + "                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n"
                                        + "                    done\n"
                                        + "                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n"
                                        + "                fi\n" + "            fi\n" + "\n"
                                        + "            if test \"x$BOOST_ROOT\" != \"x\"; then\n"
                                        + "                for libsubdir in $libsubdirs ; do\n"
                                        + "                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n"
                                        + "                done\n"
                                        + "                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n"
                                        + "                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n"
                                        + "                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n"
                                        + "                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n"
                                        + "                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n"
                                        + "                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n"
                                        + "                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n"
                                        + "                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n"
                                        + "                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n"
                                        + "                    fi\n" + "                fi\n" + "            fi\n"
                                        + "        fi\n" + "\n" + "        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n"
                                        + "        export CPPFLAGS\n" + "        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n"
                                        + "        export LDFLAGS\n" + "\n" + "        AC_LANG_PUSH(C++)\n"
                                        + "            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n"
                                        + "        @%:@include <boost/version.hpp>\n" + "        ]], [[\n"
                                        + "        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n"
                                        + "        // Everything is okay\n" + "        #else\n"
                                        + "        #  error Boost version is too old\n" + "        #endif\n"
                                        + "        ]])],[\n" + "            AC_MSG_RESULT(yes)\n"
                                        + "        succeeded=yes\n" + "        found_system=yes\n" + "            ],[\n"
                                        + "            ])\n" + "        AC_LANG_POP([C++])\n" + "    fi\n" + "\n"
                                        + "    if test \"$succeeded\" != \"yes\" ; then\n"
                                        + "        if test \"$_version\" = \"0\" ; then\n"
                                        + "            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n"
                                        + "        else\n"
                                        + "            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n"
                                        + "        fi\n" + "        # execute ACTION-IF-NOT-FOUND (if present):\n"
                                        + "        ifelse([$3], , :, [$3])\n" + "    else\n"
                                        + "        AC_SUBST(BOOST_CPPFLAGS)\n" + "        AC_SUBST(BOOST_LDFLAGS)\n"
                                        + "        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n"
                                        + "        # execute ACTION-IF-FOUND (if present):\n"
                                        + "        ifelse([$2], , :, [$2])\n" + "    fi\n" + "\n"
                                        + "    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n" + "    LDFLAGS=\"$LDFLAGS_SAVED\"\n"
                                        + "fi\n" + "\n" + "])\n";


}