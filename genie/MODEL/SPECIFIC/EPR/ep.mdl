module[epr]
{
    type[name=Context; super=reference/URI]
    type[name=L2Context; super=epr/Context]
    type[name=L3Context; super=epr/Context]

    # Superclass for all end points declared in the epr universes.
    # End point is an entity to which we can apply policy
    class[EndPoint;
          abstract;
          ]
    {

        # A unique identifer for the endpoint.  Could be related to a
        # UUID for an interface, virtual machine, etc.
        member[uuid; type=reference/UUID]
    }

    # abstraction of local end-point identifies an end-point that is
    # locally discovered and not reported to the endpoint registry
    class[LocalEp;
          super=epr/EndPoint;
          abstract
          ]
    {

    }

    # abstraction of externally reportable ep
    class[ReportedEp;
          super=epr/EndPoint;
          abstract
          ]
    {

    }

    # an endpoint with network identifiers
    class[LocalNetworkEp;
          super=epr/LocalEp;
          abstract;
          ]
    {
        # mac address of the end-point
        member[mac; type=address/MAC]
    }

    # an endpoint with network identifiers
    class[ReportedNetworkEp;
          super=epr/ReportedEp;
          abstract;
          ]
    {
        # mac address of the end-point
        member[mac; type=address/MAC]
    }

    # L2 end-point that is part of the L2 universe
    class[L2Ep;
          super=epr/ReportedNetworkEp;
          concrete
          ]
    {
        # L2 context for the end-point
        member[context; type=epr/L2Context]

        contained
        {
            parent[class=epr/L2Universe]
        }
        named
        {
            parent[class=*;]
            {
                component[member=context]
                component[prefix=-;member=mac]
            }
        }
    }

    # ip address that belongs to a L2Ep (a mac address).
    # a mac address can have many ip addresses associated with it
    # (interface multi-netting)
    class[L3Net;
          super=epr/ReportedEp;
          concrete
          ]
    {
        member[ip; type=address/IP]
        contained
        {
            parent[class=epr/L2Ep]
        }
        named
        {
            parent[class=*;]
            {
                component[member=ip]
            }
        }
    }

    # L3 end-point that is part of the L3 universe
    class[L3Ep;
          super=epr/ReportedNetworkEp;
          concrete
          ]
    {
        # ip address of the end-point
        member[ip; type=address/IP]

        # L3 context for the end-point
        member[context; type=epr/L3Context]

        contained
        {
            parent[class=epr/L3Universe]
        }
        named
        {
            parent[class=*;]
            {
                component[member=context]
                component[prefix=-;member=ip]
            }
        }
    }
}