module[gbp]
{
    class[Contract;
          super=gbp/AccessBehavioralGroup;
          concrete]
    {
        contained
        {
            parent[class=policy/Space]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=contract;
                          member=name]
            }
        }
    }

    class[Subject;
          super=gbp/AccessBehavioralGroup;
          concrete]
    {
        contained
        {
            parent[class=gbp/Contract]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=subject;
                          member=name]
            }
        }
        
    }

    class[Rule;
          super=gbp/AccessBehavioralGroup;
          concrete]
    {
        dependency[classifier;
                   cardinality=many;
                   ]
        {
            to[class=gbp/Classifier;
                cardinality=many;
                ]
        }

        contained
        {
            parent[class=gbp/Subject]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=rule;
                          member=name]
            }
        }

        member[order; type=scalar/UInt32]
        member[direction; type=gbp/Direction]
    }

}
