module[gbp]
{
    class[L2BehavioralGroup;
          super=gbp/ForwardingBehavioralGroup;
          abstract]

    type[RoutingMode; super=scalar/Enum8]
    {
        # Disable routing for flows originating in the bridge domain
        const[name=disabled; value=0]

        # Enable routing for flows originating in the bridge domain
        # (default)
        const[name=enabled; value=1]
    }

    class[BridgeDomain;
          super=gbp/L2BehavioralGroup;
          concrete]
    {
        dependency[network;
                   cardinality=single;
                   ]
        {
            to[class=gbp/RoutingDomain;
               cardinality=many;
               ]
        }
        contained
        {
            parent[class=policy/Space]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=bd;
                          member=name]
            }
        }

        member[routingMode; type=gbp/RoutingMode]
    }

    # A mode for address resolution protocols such as ARP and IPv6
    # neighbor discovery
    type[AddressResMode; super=scalar/Enum8]
    {
        # Convert ARP/ND requests into unicast
        const[name=unicast; value=0]

        # Flood ARP/ND requests in the flood domain
        const[name=flood; value=1]

        # Drop ARP/ND requests
        const[name=drop; value=2]
    }

    type[UnknownFloodMode; super=scalar/Enum8]
    {
        # Drop packets addressed to unknown layer 2 addresses
        const[name=drop; value=0]

        # Flood packets addressed to unknown layer 2 addresses to all
        # interfaces in the flood domain
        const[name=flood; value=1]

        # Proxy mode, send L2 and L3 unknown unicast packets to the
        # corresponding spine proxy address.
        const[name=hwproxy; value=2]
    }

    type[BcastFloodMode; super=scalar/Enum8]
    {
        # Deliver broadcast packets normally
        const[name=normal; value=0]

        # Treat flood domain as isolated
        const[name=isolated; value=1]

        # Drop packets addressed to unknown multicast addresses
        const[name=drop; value=2]
    }

    type[EpLearningMode; super=scalar/Enum8]
    {
        # Don't learn endpoints on this FD
        const[name=disabled; value=0]

        # Learn endpoints on this FD
        const[name=enabled; value=1]
    }

    class[FloodDomain;
          super=gbp/L2BehavioralGroup;
          concrete]
    {
        dependency[network;
                   cardinality=single;]
        {
            to[class=gbp/BridgeDomain;
               cardinality=many;
               ]
        }
        contained
        {
            parent[class=policy/Space]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=fd;
                          member=name]
            }
        }

        member[arpMode; type=gbp/AddressResMode]
        member[neighborDiscMode; type=gbp/AddressResMode]
        member[unknownFloodMode; type=gbp/UnknownFloodMode]
        member[bcastFloodMode; type=gbp/BcastFloodMode]
        member[epLearnMode; type=gbp/EpLearningMode]
    }
}
