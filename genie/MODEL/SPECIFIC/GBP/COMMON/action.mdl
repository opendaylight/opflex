module[gbp]
{
    type[HashProfOption; super=scalar/Enum8]
    {
        const[name=srcIp; value=1]

        const[name=dstIp; value=2]

        const[name=symmetric; value=3]

        const[name=NonResSrcIp; value=4]

        const[name=NonResDstIp; value=5]

        const[name=NonResSymmetric; value=6]
    }

    class[Action;
          super=gbp/AccessBehavioralGroup;
          abstract]
    {
        contained
        {
            parent[class=policy/Space]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=action;
                          member=name]
            }
        }

        member[order; type=scalar/UInt32]
    }

    class[AllowDenyAction;
          super=gbp/Action;
          concrete]
    {
        # Set to nonzero to allow, or zero to deny
        member[allow; type=scalar/UInt8]
    }

    class[RedirectDest;
          super=gbp/BaseNextHop;
          concrete]
    {
        # vnid of the routing-domain
        member[rdVnid; type=gbpe/EncapId]

        # vnid of the bridge-domain
        member[bdVnid; type=gbpe/EncapId]

        named
        {
            parent[class=*;]
            {
                component[member=name]
            }
        }
    }

    class[RedirectDestGrp;
          super=gbp/AccessBehavioralGroup;
          concrete]
    {
        contained
        {
            parent[class=policy/Space]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=rdestgrp;
                          member=name]
            }
        }
        dependency[destAtt;
                   cardinality=many;
                   ]
        {
            to[class=gbp/RedirectDest;
                cardinality=single;
              ]
        }
        member[hashOpt; type=gbp/HashProfOption]
    }

    class[RedirectAction;
          super=gbp/Action;
          concrete]
    {
        dependency[destGrp;
                   cardinality=single;
                   ]
        {
            to[class=gbp/RedirectDestGrp;
                cardinality=single;
              ]
        }

    }
}
