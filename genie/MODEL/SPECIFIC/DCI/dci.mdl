module[dci]
{

    class[Universe;
          super=policy/NameResolvedDefinition;
          concrete;
          ]
    {
        # All Universes are instantiated under the root
        root

        named
        {
            parent[class=*;]
            {
                component[prefix=domain;]
            }
        }
    }


    class[Discoverer;
          super=dci/Universe;
          concrete;
          ]
    {
        root

        named
        {
            parent[class=*;]
            {
                component[prefix=dci-discoverer;]
            }
        }
    }

    class[Ep;
          concrete
          ]
    {
        named
        {
            parent[class=*;]
            {
                component[prefix=dci-ep;]
            }
        }

        dependency[univ;
                   cardinality=single;
                   ]
        {
            to[class=dci/Universe;
                cardinality=single;
                ]
        }

        contained
        {
            parent[class=dci/Discoverer]
        }
    }

    class[Domain;
          super=policy/NameResolvedDefinition;
          concrete;
          ]
    {
        contained
        {
            parent[class=dci/Universe]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=dci;
                          member=name]
            }
        }
        dependency[gbpRoutingDomain;
                   cardinality=many;
                   ]
        {
            to[class=gbp/RoutingDomain;
               cardinality=many;
               ]
        }
    }

    type[AddressFamily; super=scalar/Enum8]
    {
        const[name=l2vpn_evpn; value=0]
        const[name=ipv4; value=4]
        const[name=ipv6; value=6]
    }

    type[TargetType; super=scalar/Enum8]
    {
        const[name=fabricImport; value=0]
        const[name=fabricExport; value=1]
    }

    class[RouteTargetPdef;
          super=policy/NameResolvedDefinition;
          concrete;
          ]
    {
        contained
        {
            parent[class=gbp/RoutingDomain]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=route-target-pdef;
                          member=name]
            }
        }
        member[af; type=dci/AddressFamily]
    }

    class[RouteTargetDef;
          super=policy/NameResolvedDefinition;
          concrete;
          ]
    {
        contained
        {
            parent[class=dci/RouteTargetPdef]
        }
        named
        {
            parent[class=*;]
            {
                component[prefix=route-target-def;
                          member=name]
            }
        }
        member[targetAf; type=dci/AddressFamily]
        member[type; type=dci/TargetType]
        member[rtAS; type=scalar/UInt32]
        member[rtIP; type=address/IP]
        member[rtNN; type=scalar/UInt32]

    }
}
