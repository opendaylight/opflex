#! @PYTHON@
#
# Copyright (c) 2010 Nicira, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import getopt
import re
import sys

argv0 = sys.argv[0]

def usage():
    print """\
%(argv0)s: print "tcpdump -xx" output as hex
usage: %(argv0)s < FILE
where FILE is output from "tcpdump -xx".

The following options are also available:
  -h, --help                  display this help message
  -V, --version               display version information\
""" % {'argv0': argv0}
    sys.exit(0)

if __name__ == "__main__":
    try:
        options, args = getopt.gnu_getopt(sys.argv[1:], 'hV',
                                          ['help', 'version'])
    except getopt.GetoptError, geo:
        sys.stderr.write("%s: %s\n" % (argv0, geo.msg))
        sys.exit(1)

    for key, value in options:
        if key in ['-h', '--help']:
            usage()
        elif key in ['-V', '--version']:
            print "ovs-pcap (Open vSwitch) @VERSION@"
        else:
            sys.exit(0)

    if len(args) != 0:
        sys.stderr.write("%s: non-option argument not supported "
                         "(use --help for help)\n" % argv0)
        sys.exit(1)

    packet = ''
    regex = re.compile(r'^\s+0x([0-9a-fA-F]+): ((?: [0-9a-fA-F]{4})+)')
    while True:
        line = sys.stdin.readline()
        if line == "":
            break

        m = regex.match(line)
        if m is None or int(m.group(1)) == 0:
            if packet != '':
                print packet
            packet = ''
        if m:
            packet += re.sub(r'\s', '', m.group(2), 0)
    if packet != '':
        print packet

# Local variables:
# mode: python
# End:
